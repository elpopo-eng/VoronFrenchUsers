#####################################################################
# 	Macros
#####################################################################

# print_start EXTRUDER=250 BED=30 FILAMENT=ABS CHAMBER=25 HEATSOAK=1 Z_OFFSET=0. COOLDOWN=1
[gcode_macro print_start]
gcode:
    ###
    ### Recuperation d'un parametre "cooldown" pour refroidir doucement
    ###
	
	cancel_delayed
	SET_GCODE_VARIABLE MACRO=CONFIG VARIABLE=print_parameters VALUE="{ params }"
   SET_GCODE_VARIABLE MACRO=BEFORE_LAYER_CHANGE VARIABLE=layerstart_ts VALUE=0
   SET_GCODE_VARIABLE MACRO=BEFORE_LAYER_CHANGE VARIABLE=meanlayerduration_ts VALUE=0
   SET_GCODE_VARIABLE MACRO=BEFORE_LAYER_CHANGE VARIABLE=meanlayerduration_nb VALUE=0
   
	PRINTF MSG="Starting print"
	
    {% if params.COOLDOWN %}
       SET_GCODE_VARIABLE MACRO=CONFIG VARIABLE=print_cooldown VALUE={ params.COOLDOWN }
    {% else %}
       SET_GCODE_VARIABLE MACRO=CONFIG VARIABLE=print_cooldown VALUE=0
    {% endif %}

    PRINTF MSG="Starting print"
    CLEAR_PAUSE
    G90             ; absolute positioning
    M82             ; absolute extruder mode
    M107            ; turn fan off
        
    ### Maintient en température
    {% if printer.extruder.temperature > 150 %}
        M109 S{printer.extruder.temperature}
    {% endif %}
    {% if printer.heater_bed.temperature > 40 %}
        M190 S{printer.heater_bed.temperature}
    {% endif %}
    
	#PRINTF MSG="QGL"
	#QGL
	#testLevel ; Do a homoing and a QGL if needed
	
	{% if not ("xy" in printer.toolhead.homed_axes) %}
	  G28
	  park
	{% endif %}

    #Heating bed and extruder
    PRINTF MSG="Heating"
    {% if params.CHAMBER %}
      SET_HEATER_TEMPERATURE HEATER=bed_fan TARGET={params.CHAMBER} 
    {% endif %}

    {% if printer.extruder.temperature > 150 %}
        # On régule déjà a plus de 170
    {% elif ((params.EXTRUDER|int) > 150) %} # ET que actuel temp en dessous
        M109 S170    ; start heating extruder
    {% else %}
        M109 S{params.EXTRUDER}
    {% endif %}
    
	
	  {% if not (printer["gcode_macro CONFIG"].bedmesh_not_needed == True) %}
      {% if params.BEDMESH %}
    	  PRINTF MSG="Bed mesh loaded"
    	  G28 X Y
    	  G28 Z
       BED_MESH_PROFILE LOAD={params.BEDMESH}
      {% else %}
  	  #PRINTF MSG="Bed mesh"
       #bed_mesh QGL=False
       #G28
       BED_MESH_CALIBRATE
      {% endif %}
    {% else %}
      PRINTF MSG="Bed mesh cancelled"
      
    {% endif %}
    
    
    park
    
	 #wait final temp for extruder
    {% if params.EXTRUDER %}
        PRINTF MSG="Waiting for final temp"
        M109 S{params.EXTRUDER}    ; wait for extruder final temp
        M190 S{params.BED}    ; wait for extruder final temp
    {% endif %}
    
    {% if (params.Z_OFFSET) and ((printer.gcode_move.homing_origin["z"]|float) == 0.0 ) %} # Et que il nest pas deja regle
     PRINTF MSG="Nouveau Z: {params.Z_OFFSET}"
		SET_GCODE_OFFSET Z={params.Z_OFFSET} MOVE=1
	  {% else %}
     PRINTF MSG="Ancien Z: {printer.gcode_move.homing_origin["z"]}"
    {% endif %}
	
	
    RUN_SHELL_COMMAND CMD="wh_primeline"
    
	#Cleaning
    clean_nozzle
	
	#Homing
    G92 E0                         ; zero/reset extruder    
    G0 E-2
    #G28 Z                          ; home Z axes NOTA: ne marche pas, home tout a cause du homing override
	
	#Purge line
    prime_line
	
	 M204 S4000
    PRINTF MSG="Printing"
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.8
    
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
	
# prime the nozzle 
[gcode_macro prime_line]
gcode: 
    PRINTF MSG="Priming Line"
    {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
      G28             ; home
	   QUAD_GANTRY_LEVEL
    {% endif %}
    
    {% set START_X = (range(20, 50) | random)/10.0  %}

    SAVE_GCODE_STATE NAME=PRIME_LINE_state
    G1  X{START_X} Y20 Z0.3 F18000        ; move to start position
    G92 E0                          ; zero/reset extruder
    G1  E5 F150                     ; extrude to put the pressure

    G92 E0    
    G1  X{START_X} Y250 Z0.3 F1500 E10    ; extrude the first line
    G1  X{START_X + 0.2} Y250 Z0.3 F18000       ; move to side a little
	
    G92 E0                          ; zero/reset extruder    
    G1  X{START_X + 0.4} Y30 Z0.3 F1500.0 E10   ; extrude the second line
	
    G92 E0                          ; zero/reset extruder    
    G1  Z2.0 E-0.1 F3000            ; move nozzle up and retract tiny bit
    G92 E0                          ; zero/reset extruder
    RESTORE_GCODE_STATE NAME=PRIME_LINE_state
 
 

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice

variable_after_print_unload: 1
variable_after_print_disable_stepper: 0
variable_after_print_heater_off: 1

gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z30.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    
    RUN_SHELL_COMMAND CMD="wh_printend"

    M107                           ; turn off fan
    G1 Z10 F3000                   ; move nozzle up 2mm
    G90                            ; absolute positioning
    park
    #BED_MESH_CLEAR
	

    {% set v_unload=printer["gcode_macro PRINT_END"].after_print_unload|int%}
    {% if v_unload == 1%}
        UNLOAD ;unload filament
    {% endif %}

	M104 S0
    
    #####
    ### Création d'un refroidissement lent
    #####
    {% if (printer["gcode_macro CONFIG"].print_cooldown|int) %}
        PRINTF MSG="cooldown { printer["gcode_macro CONFIG"].print_cooldown }min"
		
		SET_GCODE_VARIABLE MACRO=CONFIG VARIABLE=print_cooldown_beddelta VALUE={ ((printer.heater_bed.temperature - 30)/printer["gcode_macro CONFIG"].print_cooldown) }
		SET_GCODE_VARIABLE MACRO=CONFIG VARIABLE=print_cooldown_chamberdelta VALUE={ ((printer['heater_generic bed_fan'].temperature - 30)/printer["gcode_macro CONFIG"].print_cooldown) }
		
	    UPDATE_DELAYED_GCODE ID=cooldown DURATION=1
	 {% else %}
		UPDATE_DELAYED_GCODE ID=print_end_delayed DURATION=60
    {% endif %}
 
[delayed_gcode print_end_delayed]
gcode:    
    {% set v_heater_off=printer["gcode_macro PRINT_END"].after_print_heater_off|int%}
    {% if v_heater_off == 1%}
		SET_HEATER_TEMPERATURE HEATER=bed_fan TARGET=0
        TURN_OFF_HEATERS ;heaters off
    {% endif %}
    {% set v_m84=printer["gcode_macro PRINT_END"].after_print_disable_stepper|int%}
    {% if v_m84 == 1%}
        m84 ; disable motors
    {% endif %}
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 230    #edit to your park position
default_parameter_Y: 230    #edit to your park position
default_parameter_Z: 10     #edit to your park position
default_parameter_E: 1      #edit to your retract length
gcode:
    M117 Pausing
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    M117 Paused
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1      #edit to your retract length
gcode:
    M117 Resuming
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    M117 Printing

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    cancel_delayed
    #TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    park

